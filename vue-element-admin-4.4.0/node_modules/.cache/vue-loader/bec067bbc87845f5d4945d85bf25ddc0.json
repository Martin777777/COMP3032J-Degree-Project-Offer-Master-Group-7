{"remainingRequest":"/Users/xujinfengxu/Desktop/computer/tmp/comp3032j_fyp_thesis_group_7/vue-element-admin-4.4.0/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/xujinfengxu/Desktop/computer/tmp/comp3032j_fyp_thesis_group_7/vue-element-admin-4.4.0/src/views/table/user.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/xujinfengxu/Desktop/computer/tmp/comp3032j_fyp_thesis_group_7/vue-element-admin-4.4.0/src/views/table/user.vue","mtime":1679300187503},{"path":"/Users/xujinfengxu/Desktop/computer/tmp/comp3032j_fyp_thesis_group_7/vue-element-admin-4.4.0/node_modules/cache-loader/dist/cjs.js","mtime":1677830573783},{"path":"/Users/xujinfengxu/Desktop/computer/tmp/comp3032j_fyp_thesis_group_7/vue-element-admin-4.4.0/node_modules/babel-loader/lib/index.js","mtime":1677830575186},{"path":"/Users/xujinfengxu/Desktop/computer/tmp/comp3032j_fyp_thesis_group_7/vue-element-admin-4.4.0/node_modules/cache-loader/dist/cjs.js","mtime":1677830573783},{"path":"/Users/xujinfengxu/Desktop/computer/tmp/comp3032j_fyp_thesis_group_7/vue-element-admin-4.4.0/node_modules/vue-loader/lib/index.js","mtime":1677830575589}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["user.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2KA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"user.vue","sourceRoot":"src/views/table","sourcesContent":["<template>\n  <div class=\"app-container\">\n    <div class=\"filter-container\">\n      <el-input v-model=\"listQuery.username\" placeholder=\"Username\" style=\"width: 200px;\" class=\"filter-item\" @keyup.enter.native=\"handleFilter\" />\n      <el-input v-model=\"listQuery.password\" placeholder=\"Password\" style=\"width: 200px;\" class=\"filter-item\" @keyup.enter.native=\"handleFilter\" />\n      <el-input v-model=\"listQuery.email\" placeholder=\"Email\" style=\"width: 200px;\" class=\"filter-item\" @keyup.enter.native=\"handleFilter\" />\n      <el-select v-model=\"listQuery.roles\" placeholder=\"Role\" clearable style=\"width: 90px\" class=\"filter-item\">\n        <el-option v-for=\"item in roles\" :key=\"item\" :label=\"item\" :value=\"item\" />\n      </el-select>\n      <!--      <el-select v-model=\"listQuery.type\" placeholder=\"Type\" clearable class=\"filter-item\" style=\"width: 130px\">-->\n      <!--        <el-option v-for=\"item in calendarTypeOptions\" :key=\"item.key\" :label=\"item.display_name+'('+item.key+')'\" :value=\"item.key\" />-->\n      <!--      </el-select>-->\n      <el-select v-model=\"listQuery.sort\" style=\"width: 140px\" class=\"filter-item\" @change=\"handleFilter\">\n        <el-option v-for=\"item in sortOptions\" :key=\"item.key\" :label=\"item.label\" :value=\"item.key\" />\n      </el-select>\n      <el-button v-waves class=\"filter-item\" type=\"primary\" icon=\"el-icon-search\" @click=\"handleFilter\">\n        Search\n      </el-button>\n      <el-button class=\"filter-item\" style=\"margin-left: 10px;\" type=\"primary\" icon=\"el-icon-edit\" @click=\"handleCreate\">\n        Add\n      </el-button>\n      <el-button v-waves :loading=\"downloadLoading\" class=\"filter-item\" type=\"primary\" icon=\"el-icon-download\" @click=\"handleDownload\">\n        Export\n      </el-button>\n      <el-checkbox v-model=\"showReviewer\" class=\"filter-item\" style=\"margin-left:15px;\" @change=\"tableKey=tableKey+1\">\n        reviewer\n      </el-checkbox>\n    </div>\n\n    <el-table\n      :key=\"tableKey\"\n      v-loading=\"listLoading\"\n      :data=\"list\"\n      border\n      fit\n      highlight-current-row\n      style=\"width: 100%;\"\n      @sort-change=\"sortChange\"\n    >\n      <el-table-column label=\"Username\" width=\"150px\" align=\"center\">\n        <template slot-scope=\"{row}\">\n          <span>{{ row.username }}</span>\n        </template>\n      </el-table-column>\n      <el-table-column label=\"Created At\" width=\"150px\" align=\"center\">\n        <template slot-scope=\"{row}\">\n          <span>{{ row.createdAt | parseTime('{y}-{m}-{d}') }}</span>\n        </template>\n      </el-table-column>\n      <el-table-column label=\"Password\" width=\"150px\">\n        <template slot-scope=\"{row}\">\n          <!--          <span class=\"link-type\" @click=\"handleUpdate(row)\">{{ row.title }}</span>-->\n          <span>{{ row.password }}</span>\n        </template>\n      </el-table-column>\n      <el-table-column label=\"Role\" width=\"180px\" align=\"center\">\n        <template slot-scope=\"{row}\">\n          <el-tag v-for=\"role in row.roles\" :key=\"role\">{{ role }}</el-tag>\n        </template>\n      </el-table-column>\n      <el-table-column label=\"Email\" width=\"110px\" align=\"center\">\n        <template slot-scope=\"{row}\">\n          <span>{{ row.email }}</span>\n        </template>\n      </el-table-column>\n      <!--      <el-table-column v-if=\"showReviewer\" label=\"Reviewer\" width=\"110px\" align=\"center\">-->\n      <!--        <template slot-scope=\"{row}\">-->\n      <!--          <span style=\"color:red;\">{{ row.reviewer }}</span>-->\n      <!--        </template>-->\n      <!--      </el-table-column>-->\n      <!--      <el-table-column label=\"Imp\" width=\"80px\">-->\n      <!--        <template slot-scope=\"{row}\">-->\n      <!--          <svg-icon v-for=\"n in + row.importance\" :key=\"n\" icon-class=\"star\" class=\"meta-item__icon\" />-->\n      <!--        </template>-->\n      <!--      </el-table-column>-->\n      <!--      <el-table-column label=\"Readings\" align=\"center\" width=\"95\">-->\n      <!--        <template slot-scope=\"{row}\">-->\n      <!--          <span v-if=\"row.pageviews\" class=\"link-type\" @click=\"handleFetchPv(row.pageviews)\">{{ row.pageviews }}</span>-->\n      <!--          <span v-else>0</span>-->\n      <!--        </template>-->\n      <!--      </el-table-column>-->\n      <!--      <el-table-column label=\"Status\" class-name=\"status-col\" width=\"100\">-->\n      <!--        <template slot-scope=\"{row}\">-->\n      <!--          <el-tag :type=\"row.status | statusFilter\">-->\n      <!--            {{ row.status }}-->\n      <!--          </el-tag>-->\n      <!--        </template>-->\n      <!--      </el-table-column>-->\n      <el-table-column label=\"Actions\" align=\"center\" min-width=\"230\" class-name=\"small-padding fixed-width\">\n        <template slot-scope=\"{row,$index}\">\n          <router-link class=\"rl\" :to=\"'/table/application/' + row.id\">\n            <el-button type=\"primary\" size=\"mini\">\n              Applications\n            </el-button>\n          </router-link>\n\n          <el-button type=\"primary\" size=\"mini\" @click=\"handleUpdate(row)\">\n            Edit\n          </el-button>\n          <el-button v-if=\"row.status!='published'\" size=\"mini\" type=\"success\" @click=\"handleModifyStatus(row,'published')\">\n            Publish\n          </el-button>\n          <el-button v-if=\"row.status!='draft'\" size=\"mini\" @click=\"handleModifyStatus(row,'draft')\">\n            Draft\n          </el-button>\n          <el-button v-if=\"row.status!='deleted'\" size=\"mini\" type=\"danger\" @click=\"handleDelete(row,$index)\">\n            Delete\n          </el-button>\n        </template>\n      </el-table-column>\n    </el-table>\n\n    <pagination v-show=\"total>0\" :total=\"total\" :page.sync=\"listQuery.page\" :limit.sync=\"listQuery.size\" @pagination=\"getList\" />\n\n    <el-dialog :title=\"textMap[dialogStatus]\" :visible.sync=\"dialogFormVisible\">\n      <el-form ref=\"dataForm\" :rules=\"rules\" :model=\"temp\" label-position=\"left\" label-width=\"100px\" style=\"width: 400px; margin-left:50px;\">\n        <el-form-item label=\"Username\" prop=\"username\">\n          <el-input v-model=\"temp.username\" />\n        </el-form-item>\n        <el-form-item label=\"Password\" prop=\"password\">\n          <el-input v-model=\"temp.password\" />\n        </el-form-item>\n        <el-form-item label=\"Email\" prop=\"email\">\n          <el-input v-model=\"temp.email\" />\n        </el-form-item>\n        <el-form-item label=\"Role\" prop=\"roles\">\n          <el-checkbox-group v-model=\"temp.roles\" class=\"filter-item\" placeholder=\"Please select\">\n            <el-checkbox v-for=\"item in roles\" :key=\"item\" :label=\"item\" :value=\"item\">{{ item }}</el-checkbox>\n          </el-checkbox-group>\n        </el-form-item>\n        <!--        <el-form-item label=\"Date\" prop=\"timestamp\">-->\n        <!--          <el-date-picker v-model=\"temp.timestamp\" type=\"datetime\" placeholder=\"Please pick a date\" />-->\n        <!--        </el-form-item>-->\n        <!--        <el-form-item label=\"Title\" prop=\"title\">-->\n        <!--          <el-input v-model=\"temp.title\" />-->\n        <!--        </el-form-item>-->\n        <!--        <el-form-item label=\"Status\">-->\n        <!--          <el-select v-model=\"temp.status\" class=\"filter-item\" placeholder=\"Please select\">-->\n        <!--            <el-option v-for=\"item in statusOptions\" :key=\"item\" :label=\"item\" :value=\"item\" />-->\n        <!--          </el-select>-->\n        <!--        </el-form-item>-->\n        <!--        <el-form-item label=\"Imp\">-->\n        <!--          <el-rate v-model=\"temp.importance\" :colors=\"['#99A9BF', '#F7BA2A', '#FF9900']\" :max=\"3\" style=\"margin-top:8px;\" />-->\n        <!--        </el-form-item>-->\n        <!--        <el-form-item label=\"Remark\">-->\n        <!--          <el-input v-model=\"temp.remark\" :autosize=\"{ minRows: 2, maxRows: 4}\" type=\"textarea\" placeholder=\"Please input\" />-->\n        <!--        </el-form-item>-->\n      </el-form>\n      <div slot=\"footer\" class=\"dialog-footer\">\n        <el-button @click=\"dialogFormVisible = false\">\n          Cancel\n        </el-button>\n        <el-button type=\"primary\" @click=\"dialogStatus==='create'?createData():updateData()\">\n          Confirm\n        </el-button>\n      </div>\n    </el-dialog>\n\n    <el-dialog :visible.sync=\"dialogPvVisible\" title=\"Reading statistics\">\n      <el-table :data=\"pvData\" border fit highlight-current-row style=\"width: 100%\">\n        <el-table-column prop=\"key\" label=\"Channel\" />\n        <el-table-column prop=\"pv\" label=\"Pv\" />\n      </el-table>\n      <span slot=\"footer\" class=\"dialog-footer\">\n        <el-button type=\"primary\" @click=\"dialogPvVisible = false\">Confirm</el-button>\n      </span>\n    </el-dialog>\n  </div>\n</template>\n\n<script>\nimport { fetchList, fetchPv, deleteUser, createUser, updateUser } from '@/api/article'\nimport waves from '@/directive/waves' // waves directive\nimport { parseTime } from '@/utils'\nimport Pagination from '@/components/Pagination'\nimport { getAllRoles, getRoles } from '@/api/role'\n// secondary package based on el-pagination\n\nconst calendarTypeOptions = [\n  { key: 'CN', display_name: 'China' },\n  { key: 'US', display_name: 'USA' },\n  { key: 'JP', display_name: 'Japan' },\n  { key: 'EU', display_name: 'Eurozone' }\n]\n\n// arr to obj, such as { CN : \"China\", US : \"USA\" }\nconst calendarTypeKeyValue = calendarTypeOptions.reduce((acc, cur) => {\n  acc[cur.key] = cur.display_name\n  return acc\n}, {})\n\nexport default {\n  name: 'User',\n  components: { Pagination },\n  directives: { waves },\n  filters: {\n    statusFilter(status) {\n      const statusMap = {\n        published: 'success',\n        draft: 'info',\n        deleted: 'danger'\n      }\n      return statusMap[status]\n    },\n    typeFilter(type) {\n      return calendarTypeKeyValue[type]\n    }\n  },\n  data() {\n    return {\n      tableKey: 0,\n      list: null,\n      total: 0,\n      listLoading: true,\n      listQuery: {\n        page: 1,\n        size: 20\n        // username: undefined,\n        // password: undefined,\n        // email: undefined,\n        // roles: undefined,\n        // sort: 'username,asc'\n      },\n      roles: ['ROLE_USER', 'ROLE_ADMIN', 'ROLE_MODERATOR'],\n      calendarTypeOptions,\n      sortOptions: [{ label: 'Username Ascending', key: 'username,asc' }, { label: 'Username Descending', key: 'username,desc' }],\n      statusOptions: ['published', 'draft', 'deleted'],\n      showReviewer: false,\n      temp: {\n        username: '',\n        password: '',\n        // createdAt: new Date(),\n        email: '',\n        roles: []\n      },\n      dialogFormVisible: false,\n      dialogStatus: '',\n      textMap: {\n        update: 'Edit',\n        create: 'Create'\n      },\n      dialogPvVisible: false,\n      pvData: [],\n      rules: {\n        username: [{ required: true, message: 'username is required', trigger: 'blur' }],\n        password: [{ required: true, message: 'password is required', trigger: 'blur' }],\n        email: [{ required: true, message: 'email is required', trigger: 'blur' }],\n        roles: [{ required: true, message: 'role is required', trigger: 'change' }]\n      },\n      downloadLoading: false,\n      roleMap: {},\n      roleLinkMap: {}\n    }\n  },\n  created() {\n    this.getList()\n    this.getRoleMap()\n  },\n  methods: {\n    getList() {\n      this.listLoading = true\n      this.listLoading\n      fetchList(this.listQuery).then(response => {\n        this.list = response['_embedded']['users']\n        this.total = response['page']['totalElements']\n\n        // eslint-disable-next-line no-unused-vars\n        let finished = 0\n\n        for (let i = 0; i < this.list.length; i++) {\n          const user = this.list[i]\n          user['roles'] = []\n          getRoles(user['id']).then(roleResponse => {\n            const roles = roleResponse['_embedded']['roles']\n            for (const index in roles) {\n              user['roles'].push(roles[index]['name'])\n            }\n            if (finished === this.list.length - 1) {\n              this.listLoading = false\n              this.tableKey += 1\n            } else {\n              finished += 1\n            }\n          })\n        }\n\n        // Just to simulate the time of the request\n        // setTimeout(() => {\n        //   this.listLoading = false\n        //   this.tableKey = 1\n        // }, 1.5 * 1000)\n      })\n    },\n    getRoleMap() {\n      getAllRoles().then(response => {\n        const roles = response['_embedded']['roles']\n        for (let i = 0; i < roles.length; i++) {\n          const role = roles[i]\n          this.roleMap[role['name']] = role['_links']['self']['href']\n          this.roleLinkMap[role['_links']['self']['href']] = role['name']\n        }\n      })\n    },\n    handleFilter() {\n      this.listQuery.page = 1\n      this.getList()\n    },\n    handleModifyStatus(row, status) {\n      this.$message({\n        message: '操作Success',\n        type: 'success'\n      })\n      row.status = status\n    },\n    sortChange(data) {\n      const { prop, order } = data\n      if (prop === 'id') {\n        this.sortByID(order)\n      }\n    },\n    sortByID(order) {\n      if (order === 'ascending') {\n        this.listQuery.sort = 'id,asc'\n      } else {\n        this.listQuery.sort = 'id,desc'\n      }\n      this.handleFilter()\n    },\n    resetTemp() {\n      this.temp = {\n        username: '',\n        password: '',\n        // createdAt: new Date(),\n        email: '',\n        roles: []\n      }\n    },\n    handleCreate() {\n      this.resetTemp()\n      this.dialogStatus = 'create'\n      this.dialogFormVisible = true\n      this.$nextTick(() => {\n        this.$refs['dataForm'].clearValidate()\n      })\n    },\n    linkToRole(roleLinks) {\n      const roleNames = []\n      for (let i = 0; i < roleLinks.length; i++) {\n        roleNames.push(this.roleLinkMap[roleLinks[i]])\n      }\n      return roleNames\n    },\n    createData() {\n      this.$refs['dataForm'].validate((valid) => {\n        if (valid) {\n          createUser(this.temp, this.roleMap).then(response => {\n            this.temp.id = response['id']\n            this.temp.createdAt = response['createdAt']\n            this.temp.roles = this.linkToRole(this.temp.roles)\n            this.list.unshift(this.temp)\n            this.dialogFormVisible = false\n            this.$notify({\n              title: 'Success',\n              message: 'Created Successfully',\n              type: 'success',\n              duration: 2000\n            })\n          })\n        }\n      })\n    },\n    handleUpdate(row) {\n      this.temp = Object.assign({}, row) // copy obj\n      // this.temp.timestamp = new Date(this.temp.timestamp)\n      this.dialogStatus = 'update'\n      this.dialogFormVisible = true\n      this.$nextTick(() => {\n        this.$refs['dataForm'].clearValidate()\n      })\n    },\n    updateData() {\n      this.$refs['dataForm'].validate((valid) => {\n        if (valid) {\n          // const tempData = Object.assign({}, this.temp)\n          // tempData.timestamp = +new Date(tempData.timestamp) // change Thu Nov 30 2017 16:41:05 GMT+0800 (CST) to 1512031311464\n          updateUser(this.temp, this.roleMap).then(() => {\n            const index = this.list.findIndex(v => v.id === this.temp.id)\n            this.temp.roles = this.linkToRole(this.temp.roles)\n            this.list.splice(index, 1, this.temp)\n            this.dialogFormVisible = false\n            this.$notify({\n              title: 'Success',\n              message: 'Update Successfully',\n              type: 'success',\n              duration: 2000\n            })\n          })\n        }\n      })\n    },\n    handleDelete(row, index) {\n      deleteUser(row.id)\n      this.$notify({\n        title: 'Success',\n        message: 'Delete Successfully',\n        type: 'success',\n        duration: 2000\n      })\n      this.list.splice(index, 1)\n    },\n    handleFetchPv(pv) {\n      fetchPv(pv).then(response => {\n        this.pvData = response.data.pvData\n        this.dialogPvVisible = true\n      })\n    },\n    handleDownload() {\n      this.downloadLoading = true\n      import('@/vendor/Export2Excel').then(excel => {\n        const tHeader = ['timestamp', 'title', 'type', 'importance', 'status']\n        const filterVal = ['timestamp', 'title', 'type', 'importance', 'status']\n        const data = this.formatJson(filterVal)\n        excel.export_json_to_excel({\n          header: tHeader,\n          data,\n          filename: 'table-list'\n        })\n        this.downloadLoading = false\n      })\n    },\n    formatJson(filterVal) {\n      return this.list.map(v => filterVal.map(j => {\n        if (j === 'timestamp') {\n          return parseTime(v[j])\n        } else {\n          return v[j]\n        }\n      }))\n    },\n    getSortClass: function(key) {\n      const sort = this.listQuery.sort\n      return sort === `+${key}` ? 'ascending' : 'descending'\n    }\n  }\n}\n</script>\n"]}]}